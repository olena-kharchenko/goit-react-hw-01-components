{"version":3,"sources":["components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.js","components/Statistics/randColor.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","props","name","tag","location","avatar","stats","followers","views","likes","className","s","profile","src","alt","item","randColor","r","Math","floor","random","g","b","toString","Statistics","title","statistics","statList","map","stat","style","backgroundColor","label","percentage","id","FriendListItem","isOnline","online","offline","width","FriendList","friends","friend","TransactionHistory","items","transactionHistory","tableHead","row","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e664ee9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3pjps\",\"item\":\"TransactionHistory_item__2ySMU\",\"tableHead\":\"TransactionHistory_tableHead__1hHLv\",\"row\":\"TransactionHistory_row__369UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__AIfxw\",\"avatar\":\"Profile_avatar__1Um_-\",\"name\":\"Profile_name__3kUNy\",\"stats\":\"Profile_stats__2r0L4\",\"item\":\"Profile_item__17b2S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__21TW4\",\"avatar\":\"FriendList_avatar__3Es5f\",\"status\":\"FriendList_status__LpQYS\",\"online\":\"FriendList_online__F32Uq FriendList_status__LpQYS\",\"offline\":\"FriendList_offline__3uFW9 FriendList_status__LpQYS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2Bu-3\",\"statList\":\"Statistics_statList__2C2I5\",\"item\":\"Statistics_item__3BBkL\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nfunction Profile(props) {\n  const { name, tag, location, avatar, stats } = props;\n  const { followers, views, likes } = stats;\n\n  return (\n    <div className={s.profile}>\n      <div className=\"description\">\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{views}</span>\n        </li>\n        <li className={s.item}>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","function randColor() {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  const color = '#' + r.toString(16) + g.toString(16) + b.toString(16);\n\n  return color;\n}\n\nexport default randColor;\n","import PropTypes from 'prop-types';\nimport randColor from './randColor';\nimport s from './Statistics.module.css';\n\nfunction Statistics(props) {\n  const { title, stats } = props;\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className=\"title\">Upload stats</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(stat => (\n          <li\n            className={s.item}\n            key={stat.id}\n            style={{ backgroundColor: randColor() }}\n          >\n            <span className=\"label\">{stat.label}</span>\n            <span className=\"percentage\">{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <>\n      <span className={isOnline ? s.online : s.offline}>{isOnline}</span>\n      <img className={s.avatar} src={avatar} alt=\"\" width=\"48\" />\n      <p className=\"name\"> {name}</p>\n    </>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import FriendListItem from './FriendListItem';\nimport PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(friend => (\n        <li className={s.item} key={friend.id}>\n          <FriendListItem\n            isOnline={friend.isOnline}\n            avatar={friend.avatar}\n            name={friend.name}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr className={s.tableHead}>\n          <th className={s.item}>Type</th>\n          <th className={s.item}>Amount</th>\n          <th className={s.item}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id} className={s.row}>\n            <td className={s.item}>{item.type}</td>\n            <td className={s.item}>{item.amount}</td>\n            <td className={s.item}>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import user from './components/Profile/user.json';\nimport Profile from './components/Profile/Profile';\n\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport Statistics from './components/Statistics/Statistics';\n\nimport friends from './components/FriendList/friends.json';\nimport FriendList from './components/FriendList/FriendList';\n\nimport transactions from './components/TransactionHistory/transactions.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nexport default function App() {\n  return (\n    <div>\n      {/* 1 задача */}\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      {/* 2 задача */}\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      {/* 3 задача */}\n      <FriendList friends={friends} />\n      {/* 4 задача */}\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// const elem1 = <span>Привет</span>;\n// const elem2 = <span>мир</span>;\n\n// const element = (\n//   <div>\n//     {elem1}\n//     {elem2}\n//   </div>\n// );\n// console.log(element);\n\n// ReactDOM.render(element, document.querySelector(\"#root\"));\n"],"sourceRoot":""}